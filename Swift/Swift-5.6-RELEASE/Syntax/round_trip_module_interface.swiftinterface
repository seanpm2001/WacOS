// RUN: rm -rf %t
// RUN: %swift-syntax-test -input-source-filename %s -parse-gen > %t
// RUN: diff -u %s %t
// RUN: %swift-syntax-test -input-source-filename %s -parse-gen -print-node-kind > %t.withkinds
// RUN: diff -u %S/Outputs/round_trip_module_interface.swiftinterface.withkinds %t.withkinds
// RUN: %swift-syntax-test -input-source-filename %s -eof > %t
// RUN: diff -u %s %t
// RUN: %swift-syntax-test -serialize-raw-tree -input-source-filename %s > %t.dump
// RUN: %swift-syntax-test -deserialize-raw-tree -input-source-filename %t.dump -output-filename %t
// RUN: diff -u %s %t

import Swift

public class Bar {
  public init(x: Int = 24, y: Int)
}

public class Foo: Bar {
  public override init(x: Int = super, y: Int)
  public subscript(k: Int = super) -> Int { get }
  public func foo(x: Int = super)
  public func foo(y: Int = super.init)
  public func foo(z: Int = super[1])
}
