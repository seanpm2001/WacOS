// RUN: %target-sil-opt -differentiability-witness-devirtualizer %s -enable-sil-verify-all | %FileCheck %s

sil_stage raw

import _Differentiation
import Swift
import Builtin

sil_differentiability_witness [reverse] [parameters 0] [results 0] @witness_defined_in_module : $@convention(thin) (Float) -> Float {
  jvp: @witness_defined_in_module_jvp : $@convention(thin) (Float) -> (Float, @owned @callee_guaranteed (Float) -> Float)
  vjp: @witness_defined_in_module_vjp : $@convention(thin) (Float) -> (Float, @owned @callee_guaranteed (Float) -> Float)
}

sil_differentiability_witness [reverse] [parameters 0] [results 0] @witness_definition_not_available : $@convention(thin) (Float) -> Float

// This is an example of a witness that is available (via deserialization)
// even though it is not defined in the current module.
// witness for static Swift.Float.+ infix(Swift.Float, Swift.Float) -> Swift.Float
sil_differentiability_witness [reverse] [parameters 0 1] [results 0] @$sSf1poiyS2f_SftFZ : $@convention(method) (Float, Float, @thin Float.Type) -> Float

sil @witness_defined_in_module : $@convention(thin) (Float) -> Float

sil @witness_defined_in_module_jvp : $@convention(thin) (Float) -> (Float, @owned @callee_guaranteed (Float) -> Float)

sil @witness_defined_in_module_vjp : $@convention(thin) (Float) -> (Float, @owned @callee_guaranteed (Float) -> Float)

sil @witness_definition_not_available : $@convention(thin) (Float) -> Float

sil public_external [transparent] [serialized] @$sSf1poiyS2f_SftFZ : $@convention(method) (Float, Float, @thin Float.Type) -> Float

sil @test : $@convention(thin) (Float) -> () {
bb0(%0 : $Float):
  %1 = differentiability_witness_function [vjp] [reverse] [parameters 0] [results 0] @witness_defined_in_module : $@convention(thin) (Float) -> Float
  // CHECK: function_ref @witness_defined_in_module_vjp : $@convention(thin) (Float) -> (Float, @owned @callee_guaranteed (Float) -> Float)

  %2 = differentiability_witness_function [vjp] [reverse] [parameters 0] [results 0] @witness_definition_not_available : $@convention(thin) (Float) -> Float
  // CHECK: differentiability_witness_function [vjp] [reverse] [parameters 0] [results 0] @witness_definition_not_available : $@convention(thin) (Float) -> Float

  %3 = differentiability_witness_function [vjp] [reverse] [parameters 0 1] [results 0] @$sSf1poiyS2f_SftFZ : $@convention(method) (Float, Float, @thin Float.Type) -> Float
  // CHECK: function_ref @$sSf1poiyS2f_SftFZTJrSSUpSr : $@convention(method) (Float, Float, @thin Float.Type) -> (Float, @owned @callee_guaranteed (Float) -> (Float, Float))

  return undef : $()
}
