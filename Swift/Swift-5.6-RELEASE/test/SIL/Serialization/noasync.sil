// First parse this and then emit a *.sib. Then read in the *.sib, then recreate
// RUN: %empty-directory(%t)
// RUN: %target-sil-opt %s -emit-sib -o %t/tmp.sib -module-name async
// RUN: %target-sil-opt %t/tmp.sib -module-name async | %FileCheck %s
// REQUIRES: concurrency

import Builtin
import Swift
import _Concurrency

// CHECK: sil [serialized] @noasync_callee : $@convention(thin) @async () -> ()
sil [serialized] @noasync_callee : $@convention(thin) @async () -> ()

// CHECK: sil [serialized] @noasync_apply : $@convention(thin) () -> () {
sil [serialized] @noasync_apply : $@convention(thin) () -> () {
bb0:
  %0 = function_ref @noasync_callee : $@convention(thin) @async () -> ()
  // CHECK: apply [noasync] %0
  %1 = apply [noasync] %0() : $@convention(thin) @async () -> ()
  return undef : $()
}

