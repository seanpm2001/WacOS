@echo off
rem
rem Script to run a pcom self compile
rem
rem Run macro preprocessor to configure source for self compile.
rem
call pascpp source\pcom -DWRDSIZ64 -DSELF_COMPILE
rem
rem Compile pcom to intermediate code using its binary version.
rem
echo Compiling pcom to intermediate code
call compile source\pcom.mpp
if ERRORLEVEL 1 (

    echo *** Compile fails
    goto exit

)
rem
rem Now run that code on the interpreter and have it compile itself
rem to intermediate again.
rem
echo Running pcom to compile itself
cat source\pcom.mpp.p5 source\pcom.mpp.pas > tmp.p5
mv source\pcom.mpp.p5 source\pcom.mpp.p5.org
cp tmp.p5 source\pcom.mpp.p5
echo.> source\pcom.mpp.inp
call run source\pcom.mpp
type source\pcom.mpp.lst
rem
rem Now we have the original intermediate from the binary version
rem of pcom, and the intermediate generated by the interpreted
rem pcom. Compare them for equality. Put the result in pcom.mpp.dif.
rem
echo Comparing the intermediate code for the runs
call diffnole source\pcom.mpp.p5.org source\pcom.mpp.out > source\pcom.mpp.dif
rem
rem Show the file, so if the length is zero, it compared ok.
rem
rem echo Resulting diff file length should be zero for pass
rem dir source\pcom.mpp.dif
call :passfail source\pcom.mpp.dif
goto :exit

:passfail
if %~z1 == 0 (

    echo PASSED

) else (

    echo *** FAILED

)
goto :eof

:exit
